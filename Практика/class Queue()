#include <iostream>
#include <stdio.h>
#define N 5
using namespace std;

class Queue {
    int buffer[N];
    int start  = -1, end = -1;
public:
	Queue() = default;
	bool IsEmpty() const {
		return (start == end && end == -1);
	}

	bool IsFull() {
		return ((end + 1) % N == start);
	}
	
	int counter() const {
		if (IsEmpty()) 
			return 0;
		return (end >= start) ? (end - start + 1) : (N - (start - end - 1));
	}

	int front() const {
		if (IsEmpty())
			exit(1);
		return buffer[start];
	}

	int back() const {
		if (IsEmpty())
			exit(1);
		return buffer[end];
	}

	void reset() {
		 start = end = -1;
	}

	bool push(int element) {
		if (IsFull())
			return false;
		if (IsEmpty()) 
			start = end = 0;
		else 
			end = (end + 1) % N;			
		buffer[end] = element;
		return true;		
	}

	bool pop() {
		if (IsEmpty())
			return false;
		if (start == end) 
			reset();
		else 
			start = (start + 1) % N;
		return true;		
	}

	void print() const {
		if (IsEmpty())
			cout << "The queue is empty \n";
		else {
			if (start == end) 
				cout << buffer[start] << endl;
			else {
				int i = start;
				while (i != end) {
					cout << buffer[i] << "->";
					i = (i + 1) % N;
				}
				cout << buffer[i] << endl;
			}
		}
	}
};

int main() {
	return 0;
}
